
package com.learnwebservices.services.tempconverter;

import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.2
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "TempConverterEndpointService", targetNamespace = "http://learnwebservices.com/services/tempconverter", wsdlLocation = "/temp.wsdl")
public class TempConverterEndpointService
    extends Service
{

    private final static URL TEMPCONVERTERENDPOINTSERVICE_WSDL_LOCATION;
    private final static WebServiceException TEMPCONVERTERENDPOINTSERVICE_EXCEPTION;
    private final static QName TEMPCONVERTERENDPOINTSERVICE_QNAME = new QName("http://learnwebservices.com/services/tempconverter", "TempConverterEndpointService");

    static {
        TEMPCONVERTERENDPOINTSERVICE_WSDL_LOCATION = com.learnwebservices.services.tempconverter.TempConverterEndpointService.class.getResource("/temp.wsdl");
        WebServiceException e = null;
        if (TEMPCONVERTERENDPOINTSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find '/temp.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        TEMPCONVERTERENDPOINTSERVICE_EXCEPTION = e;
    }

    public TempConverterEndpointService() {
        super(__getWsdlLocation(), TEMPCONVERTERENDPOINTSERVICE_QNAME);
    }

    public TempConverterEndpointService(WebServiceFeature... features) {
        super(__getWsdlLocation(), TEMPCONVERTERENDPOINTSERVICE_QNAME, features);
    }

    public TempConverterEndpointService(URL wsdlLocation) {
        super(wsdlLocation, TEMPCONVERTERENDPOINTSERVICE_QNAME);
    }

    public TempConverterEndpointService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TEMPCONVERTERENDPOINTSERVICE_QNAME, features);
    }

    public TempConverterEndpointService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TempConverterEndpointService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns TempConverterEndpoint
     */
    @WebEndpoint(name = "TempConverterEndpointPort")
    public TempConverterEndpoint getTempConverterEndpointPort() {
        return super.getPort(new QName("http://learnwebservices.com/services/tempconverter", "TempConverterEndpointPort"), TempConverterEndpoint.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TempConverterEndpoint
     */
    @WebEndpoint(name = "TempConverterEndpointPort")
    public TempConverterEndpoint getTempConverterEndpointPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://learnwebservices.com/services/tempconverter", "TempConverterEndpointPort"), TempConverterEndpoint.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TEMPCONVERTERENDPOINTSERVICE_EXCEPTION!= null) {
            throw TEMPCONVERTERENDPOINTSERVICE_EXCEPTION;
        }
        return TEMPCONVERTERENDPOINTSERVICE_WSDL_LOCATION;
    }

}
